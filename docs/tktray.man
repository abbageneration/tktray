[manpage_begin tktray n 1.0]
[copyright {2005, Anton Kovalenko}]
[moddesc   {tktray}]
[titledesc {System Tray Icon Support for Tk on X11}]
[require Tcl 8.4]
[require tktray [opt 1.0]]
[description]
[para]

Tktray is an extension that is able to create system tray icons.
It follows [uri http://www.freedesktop.org]
specifications when looking up the system tray 
manager. This protocol is supported by modern versions
of KDE and Gnome panels, and by some other panel-like application.

[section COMMANDS]

[list_begin definitions]

[call [cmd "tktray::icon"] [arg pathName] [opt [arg options]]]

Create a new icon for the system tray. 
The application managing the system tray is notified about the new icon.
It normally results in the icon being added to the tray.

If there is no system tray at the icon creation time, the icon will be
invisible. When a new system tray appears, the icon will be added to
it. Since tktray 1.3, when the tray crashes and destroys your icon, it
will be recreated on a new system tray when it's available.

[list_begin opt]
[opt_def "-class"]
   WM_CLASS attribute for the icon window. Tray manager may use class name
   to remember icon position or other attributes. This name may also be used 
   for event binding. 

[opt_def "-image"]
   image to show in the system tray. Since tktray 1.3, image type "photo"
   is not mandatory anymore.

   The icon will be automatically redrawn or resized 
   appropriately on any image modifications.

[opt_def "-shape"] used to put a nonrectangular shape on an icon
   window. Ignored for compatibility.

[opt_def "-visible"]
   boolean value indicating whether the icon must be visible. 
   The system tray manager continues to manage the icon whether it is
   visible or not. Thus  when invisible icon becomes visible, its position
   on the system tray is likely to remain the same.

[list_end]

[call [arg pathName] [method configure] [opt [arg options]]]
   
   Modify icon's options after it was created. 

[call [arg pathName] [method bbox]]
   
   Get the list of left, top, right and bottom coordinates of the icon
   relative to the root window of the icon's screen.

   This command should be used in preference to [cmd "winfo rootx"]
   and [cmd "winfo rooty"] to get icon location, though the latter may
   seem to work on your system.

   Bounding box information is updated asynchronously. Don't rely on
   its correctness on script startup, just after icon creation.  
   This command is for event handlers:  on <ButtonPress-3>
   you'd like to have a popup menu, but where it should be posted?
   Use %W bbox to determine it right at the moment when a click happened.


[list_end]

[section "WINDOW MANAGEMENT"]

   Current implementation of tktray is designed to present an
   interface of a usual toplevel window, but there are some important
   differences (some of them may come up later). System Tray
   specification is based on XEMBED protocol, and the later has a
   problem: when the embedder crashes, nothing can prevent embedded
   windows from destruction.

   Since tktray 1.3, no explicit icon recreation code is required on
   Tcl level. The widget was split in two: one represented by a
   caller-specified name, and another (currently $path.inner) that
   exists only when a tray is available (and dies and comes back and
   so on).

   This solution has some disadvantages as well.  User-created widget
   is not mapped at all, thus it can't be used any more as a parent
   for other widgets, showing them instead of an image. A temporal
   inner window, however, may contain widgets.

   This version introduces two virtual events, <<IconConfigure>> and
   <<IconDestroy>>. The first is generated when an icon (the inner
   window) appears on screen, and when it's moved, resized or changed
   in some other way.  The second is generated when the inner window
   is destroyed (you may bind to $icon.inner <Destroy> as well).

   It's not recommended to build complex GUIs in the system tray. Also
   note that the correct handling of the keyboard input is unlikely to
   become possible. Events aren't 


[section AUTHORS]
Anton Kovalenko
See [uri http://www.sw4me.com/wiki/Tktray].
[para]

[keywords icons taskbar "system tray"]

[manpage_end]
